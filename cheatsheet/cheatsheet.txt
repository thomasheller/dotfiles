tmux
----
  C-g F1                              this cheatsheet (custom binding)
  C-g w                               choose window from tree
  C-g ,                               rename window
  C-g .                               move window
  C-g :set sy                         toggle synchronize-panes
  C-g ?                               list-keys
  C-g :ca -S -100000;sa /tmp/foo.txt  capture pane
  C-g j -s 0 -t 1                     join panes from window 1 into window 0
  C-g !                               break-panes

time
----
  24 hours ^= 1440 minutes
   1 hour  ^= 3600 seconds

Docker/Kubernetes
-----------------
  C-p C-q  detach from interactive shell

Go
--
  time.Parse(layout, value string)
    Mon Jan 2 15:04:05 MST 2006

  ioutil.ReadFile(filename string) ([]byte, error)
  ioutil.WriteFile(filename string, data []byte, perm os.FileMode) error

Zsh
---
  zmv '(*).foo' '$1.bar'

Markdown
--------
  https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet
  # heading 1
  ## heading 2
  https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#links
  [I'm an inline-style link](https://www.google.com)

Dotfiles
--------

https://wiki.archlinux.org/index.php/XDG_Base_Directory#Support

telegram-cli
------------

  docker run --rm -it weibeld/ubuntu-telegram-cli

  get_self
  contact_list  required for auto-completion
  dialog_list  *required for auto-completion*
  user_info <peer>
  history <peer>
  msg <peer> <text>
  chat_with_peer <peer> ... [/exit | /quit | ^D]
  quit | ^D

apt
---
  apt-cache search <foo>  search for something
  dpkg -S <file>          search for packages providing <file>
                          (only installed packages?)

Databases
---------
                 Postgres             MySQL
show databases   \l                   SHOW DATABASES;
show tables      \dt                  SHOW TABLES;
use database     \c <database>        USE <database>;

Vim
---

:echo &variable Inspect variables

zo		Open one fold under the cursor.
zO		Open all folds under the cursor recursively.
zc		Close one fold under the cursor.
zC		Close all folds under the cursor recursively.
zM		Close all folds: set 'foldlevel' to 0.
zR		Open all folds.  This sets 'foldlevel' to highest fold level.
zm		Fold more: Subtract |v:count1| from 'foldlevel'.
zr		Reduce folding: Add |v:count1| to 'foldlevel'.

Unit Prefixes
-------------

yotta	Y	10^24	1000000000000000000000000
zetta	Z	10^21	1000000000000000000000
exa	E	10^18	1000000000000000000
peta	P	10^15	1000000000000000
tera	T	10^12	1000000000000
giga	G	10^9	1000000000
mega	M	10^6	1000000
kilo	k	10^3	1000
hecto	h	10^2	100
deca	da	10^1	10
		10^0	1
deci	d	10^-1	0.1
centi	c	10^-2	0.01
milli	m	10^-3	0.001
micro	Î¼	10^-6	0.000001
nano	n	10^-9	0.000000001
pico	p	10^-12	0.000000000001
femto	f	10^-15	0.000000000000001
atto	a	10^-18	0.000000000000000001
zepto	z	10^-21	0.000000000000000000001
yocto	y	10^-24 	0.000000000000000000000001

Control hotkeys
---------------

 	Shell			vim		tmux/Screen	X11/GUI
X*C-a 	beginning-of-line			Screen
X C-b 				backwards	tmux
X*C-c 	SIGINT							clip copy
X*C-d 	EOF
X*C-e 	end-of-line
X*C-f 				forwards
  C-g 				:file				Chrome: continue search
  C-h (Vim binding)
#+C-i 	tab			tab				Firefox: page info
 +C-j (Vim binding)
 +C-k (Vim binding)
 +C-l (Vim binding)
#+C-m 	newline			newline		mark (tmux)	Firefox: mute
X+C-n 				auto complete
X+C-o 				older jump
 +C-p 				k (prev line)			often "print"
 *C-q*								often "quit"
X*C-r 	search backwards
 *C-s*	search fowards		(^W) split
  C-t 				older tag
X+C-u 	delete line
X*C-v*				visual block			clip paste
X*C-w*	delete word
X*C-x*				completion			clip cut
  C-y| 				scroll up
X*C-z| 	suspend job

Magento2
--------

  SELECT * FROM core_config_data WHERE path LIKE '%base_url%'
  catalog_product_entity

.. vim:ft=rst
